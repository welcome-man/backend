<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gloudtek.dao.SysRoleDao">

	<select id="queryObject" resultType="com.gloudtek.entity.SysRoleEntity">
		select * from sys_role where
		role_id = #{value}
	</select>

	<select id="queryList" resultType="com.gloudtek.entity.SysRoleEntity">
		select * from sys_role
		<where>
			<if test="roleName != null and roleName.trim() != ''">
				and `role_name` like concat('%',#{roleName},'%')
			</if>
		</where>
		order by role_id asc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>

	<select id="queryTotal" resultType="int">
		select count(*) from sys_role
		<where>
			<if test="roleName != null and roleName.trim() != ''">
				and `role_name` like concat('%',#{roleName},'%')
			</if>
		</where>
	</select>

	<insert id="save" parameterType="com.gloudtek.entity.SysRoleEntity"
		useGeneratedKeys="true" keyProperty="roleId">
		insert into sys_role
		(
		`role_id`,
		`role_name`,
		`remark`,
		`type`,
		`create_by`,
		`create_time`,
		`update_by`,
		`update_time`,
		`isdelete`
		)
		values
		(
		#{roleId},
		#{roleName},
		#{remark},
		#{type},
		#{createBy},
		#{createTime},
		#{updateBy},
		#{updateTime},
		#{isdelete}
		)
	</insert>

	<update id="update" parameterType="com.gloudtek.entity.SysRoleEntity">
		update sys_role
		<set>
			<if test="roleName != null">`role_name` = #{roleName}, </if>
			<if test="remark != null">`remark` = #{remark}</if>
		</set>
		where role_id = #{roleId}
	</update>

	<delete id="deleteBatch">
		delete from sys_role where role_id in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
		;
		delete from sys_role_menu where role_id in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
		;
		delete from sys_user_role where role_id in
		<foreach item="roleId" collection="array" open="(" separator=","
			close=")">
			#{roleId}
		</foreach>
	</delete>

	<select id="selectRoleName" resultType="string">
		select group_concat(role_name) from sys_role where role_id in (select
		role_id from sys_user_role where user_id = #{userId}) and isdelete = 0
	</select>

	<select id="selectRoleNames" resultType="string">
		select role_name from sys_role where role_id in (select role_id from
		sys_user_role where user_id = #{userId}) and isdelete = 0
	</select>

	<select id="selectRoleId" resultType="string">
		select role_id from sys_user_role where user_id = #{userId}
	</select>

	<select id="selectsponsorDepartment" resultType="string">
		SELECT system_group_id FROM case_organization
		WHERE case_id = #{caseId} and sponsor_id = #{sponsorId} and isdelete = 0
	</select>
</mapper>